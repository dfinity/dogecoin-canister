# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Github Pages Book

on:
  # Only run this workflow when there are changes to the docs directory
  pull_request:
    paths:
      - "docs/**"
  push:
    paths:
      - "docs/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.52
      RUST_VERSION: 1.84.0 # Use the same version as in `rust-toolchain.toml`
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup update ${RUST_VERSION} --no-self-update
          rustup default ${RUST_VERSION}
          rustup target add wasm32-unknown-unknown

      - name: Install mdbook
        run: |
          cargo install mdbook --version ${MDBOOK_VERSION} --locked

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build book
        run: |
          cd docs
          mdbook build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  # Deployment job
  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4